apiVersion: v1
data:
  filebeat.yml: |-
    queue:
       mem:
         events: 4096
         flush.min_events: 2048
         flush.timeout: 5s
    filebeat.autodiscover:
      providers:
        - type: kubernetes
          templates:
            - condition:
                and:
                  - equals:
                      kubernetes.labels.polardbx/role: cn
    
                  - equals:
                      kubernetes.labels.polardbx/enableAuditLog: "true"
    
              config:
                - type: log
                  scan_frequency: 0.3s
                  harvester_buffer_size: 10485760
                  fields:
                    log_type: cn_sql_log
                    instance_id: ${data.kubernetes.labels.polardbx/name}
                    pod_name: ${data.kubernetes.pod.name}
                    node_name: ${data.kubernetes.node.name}
                  paths:
                    - {{ .Values.filebeat.hostEmplyDirPathPrefix }}/${data.kubernetes.pod.uid}/volumes/kubernetes.io~empty-dir/polardbx-log/*/sql.log
                - type: log
                  fields:
                    log_type: cn_slow_log
                    instance_id: ${data.kubernetes.labels.polardbx/name}
                    pod_name: ${data.kubernetes.pod.name}
                    node_name: ${data.kubernetes.node.name}
                  paths:
                    - {{ .Values.filebeat.hostEmplyDirPathPrefix }}/${data.kubernetes.pod.uid}/volumes/kubernetes.io~empty-dir/polardbx-log/*/slow.log
                - type: log
                  fields:
                    log_type: cn_tddl_log
                    instance_id: ${data.kubernetes.labels.polardbx/name}
                    pod_name: ${data.kubernetes.pod.name}
                    node_name: ${data.kubernetes.node.name}
                  paths:
                    - {{ .Values.filebeat.hostEmplyDirPathPrefix }}/${data.kubernetes.pod.uid}/volumes/kubernetes.io~empty-dir/polardbx-log/*/tddl.log
                  multiline:
                    type: pattern
                    pattern: '^\[[0-9]{4}-[0-9]{2}-[0-9]{2}'
                    negate: true
                    match: after
            - condition:
                and:
                  - equals:
                      kubernetes.labels.polardbx/enableAuditLog: "true"
                  - or:
                      - equals:
                          kubernetes.labels.polardbx/role: dn
                      - equals:
                          kubernetes.labels.polardbx/role: gms
              config:
                - type: filestream
                  id: dn-audit-log-filestream
                  prospector.scanner.check_interval: 1s
                  buffer_size: 1048576
                  # close.reader.after_interval: 50s
                  fields:
                    log_type: dn_audit_log
                    instance_id: ${data.kubernetes.labels.polardbx/name}
                    dn_instance_id: ${data.kubernetes.labels.xstore/name}
                    pod_name: ${data.kubernetes.pod.name}
                    node_name: ${data.kubernetes.node.name}
                  paths:
                    #alog must in mysql/*/*.alog 
                    - {{ .Values.filebeat.dnDataHostPathPrefix }}/${data.kubernetes.namespace}/${data.kubernetes.pod.name}/tmp/*.alog
                  parsers:
                  - multiline:
                      type: pattern
                      pattern: '.*\x01$'
                      negate: true
                      match: before
            - condition:
                or:
                  - equals:
                      kubernetes.labels.polardbx/role: dn
                  - equals:
                      kubernetes.labels.polardbx/role: gms
              config:
                - type: filestream
                  id: dn-slow-log-filestream
                  prospector.scanner.check_interval: 1s
                  fields:
                    log_type: dn_slow_log
                    instance_id: ${data.kubernetes.labels.polardbx/name}
                    dn_instance_id: ${data.kubernetes.labels.xstore/name}
                    pod_name: ${data.kubernetes.pod.name}
                    node_name: ${data.kubernetes.node.name}
                  paths:
                    - {{ .Values.filebeat.dnDataHostPathPrefix }}/${data.kubernetes.namespace}/${data.kubernetes.pod.name}/data/mysql/slow_log_*.CSV
                - type: filestream
                  id: dn-error-log-filestream
                  prospector.scanner.check_interval: 1s
                  fields:
                    log_type: dn_error_log
                    instance_id: ${data.kubernetes.labels.polardbx/name}
                    dn_instance_id: ${data.kubernetes.labels.xstore/name}
                    pod_name: ${data.kubernetes.pod.name}
                    node_name: ${data.kubernetes.node.name}
                  paths:
                    - {{ .Values.filebeat.dnDataHostPathPrefix }}/${data.kubernetes.namespace}/${data.kubernetes.pod.name}/log/alert.log
                  parsers:
                  - multiline:
                      type: pattern
                      pattern: '^\d{4}-\d{2}-\d{2}|^\[\d{4}-\d{2}-\d{2}'
                      negate: true
                      match: after
    
    processors:
      - drop_fields:
          fields: ["input","log","ecs","container","kubernetes","@metadata","agent"]
          ignore_missing: false
    
    
    # output.file:
    #   path: "/tmp/filebeat"
    #   filename: filebeat

    #output.console:
    #  enable: false
    #  codec.json:
    #    pretty: true
    
    output.logstash:
      enable: true
      hosts: ["{{ .Values.logstash.name }}:{{ .Values.logstash.port }}"]
kind: ConfigMap
metadata:
  name: filebeat-config
  namespace: {{ .Release.Namespace }}